import Vue from 'vue'
import MessageMain from './messageMain' // Import the message template defined above
const MessageBox = Vue.extend(MessageMain) // Use Vue.extend to create a constructor
let instance // instance Variables are used to hold instances
let timer = null // timer Variables are used to hold timers
// Define a function that takes options and defaults to an object
const Message = function(options = {}) {
  // If you are on the server side, it simply returns
  if (Vue.prototype.$isServer) return
  // If the timer is on, then there is already a message-box on the page, and no new message-box can be created
  if (timer) return
  // Do something with options so that if a string is passed directly, it is stored in the message property of options
  if (typeof options === 'string') {
    options = {
      message: options
    }
  }
  // When you initialize the instance and pass options as new data, Vue will merge the options onto the existing data, overriding the default values, but anything that isn't set in options will remain unchanged
  instance = new MessageBox({
    data: options
  })
  // Call the $mount method, which renders the current instance into the real DOM, producing $el, which will not be available without specifying a DOM node to take over the current instance
  instance.vm = instance.$mount()
  // Use the native js API to append the actual DOM of the current instance to the body
  document.body.appendChild(instance.vm.$el)
  // The vm on the instance is our Vue component, so we have access to all the properties of the current instance through the vm
  // Set visible to true to display the current message-box
  instance.vm.visible = true
  // Turn on the timer
  timer = setTimeout(() => {
    // The current instance is manually uninstalled after the time is up
    instance.vm.$destroy()
    // The DOM nodes generated by the current instance are removed from the real DOM tree using the native API
    instance.vm.$el.parentNode.removeChild(instance.vm.$el)
    // Clear the timer
    timer = null
  }, instance.vm.duration)
  // The time of the timer uses the time defined in the vm
  return instance.vm
}

//
export default {
  message: Message,
  install(Vue) {
    Vue.prototype.$message = Message
    Vue.message = Message
  }
}
